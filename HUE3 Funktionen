#include <stdio.h>
#include <stdlib.h>

float summe(int arrlen, float arr[])  //Summenfunktion##################
{
	int i;
	float sum = 0;
	for (i = 0; i < arrlen; i++)
	{
		sum = sum + arr[i];
		/*if (i == (arrlen - 1))
		{
			printf("Die Summe ist %f!\n", sum);
		}*/
	}
	return sum;
}

float inhalt(int arrlen, float arr[]) //Ihaltfunktion####################
{
	int i;
	
	for (i = 0; i < arrlen; i++)
	{
		printf("Zahlen im Array: %f\n", arr[i]);
	}
	return 0;
}

float minimum(int arrlen, float arr[]) //Minimumfunktion####################
{
	int i;
	float min = arr[0];
	for (i = 1; i < arrlen; i++)
	{		
		if (min >= arr[i])
		{
			min = arr[i];
		}
	}
	return min;
}
float maximum(int arrlen, float arr[])
{
	int i;
	float max = arr[0];
	for (i = 1; i < arrlen; i++)
	{		
		if (max <= arr[i])
		{
			max = arr[i];
		}
	}
	return max;
}
/*#######float sortieren(int arrlen, float arr[]) 	//--------array r체ckgabe geht ja nicht, platzhalter########
{
	int mini = arr[0];
	int a, m, index, f;
	int b[arrlen];
	for (f=0; f<arrlen; f++)
	{
		b[f] = 0;
		printf("binaryarray: %d\n", b[f]);
	}
	int sor[arrlen];

	for (m = 0; m < arrlen; ++m)
	{	
		for (a = 0; a < arrlen; ++a)
		{
		
				if (mini >= arr[a] && b[a]== 0)
				{
				mini = arr[a];
				index = a;
				}
				else
				{
					continue;
				}
		}
		sor[m] = mini;
		b[index] = 1;  
		mini = 9999;
	}
	int p = 0;
	for (p = 0; p < arrlen; ++p)
	{
		printf("sorlist%d\n", sor[p]);
	}
	return 0;
}
/*################*/

float median(int arrlen, float arr[])
{
	int mini = arr[0];
	int a, m, index, f;
	int b[arrlen];
	for (f=0; f<arrlen; f++)
	{
		b[f] = 0;
	}
	int sor[arrlen];

	for (m = 0; m < arrlen; ++m)
	{	
		for (a = 0; a < arrlen; ++a)
		{
		
				if (mini >= arr[a] && b[a]== 0)
				{
				mini = arr[a];
				index = a;
				}
				else
				{
					continue;
				}
		}
		sor[m] = mini;
		b[index] = 1;  
		mini = 9999;
	}
	float med;
	//probe ob Anzahl der zahlen im Array gerade oder ungerade:
	
	int mod = arrlen%2;
	int medianvar;
	if (mod == 0)
		{
			medianvar = arrlen/2;
			med = (sor[medianvar]+sor[medianvar-1])/2;
			printf("Median: %f\n", med);
		}
	if (mod != 0)
	{
		medianvar = (arrlen/2) + 0.5;
		med = sor[medianvar];
		//printf("Median: %f\n", median);
	}
	return med;
}
float mittelwert(int arrlen, float arr[])
{
	float sum = 0;
	float mitlw;
	int i;
	for (i = 0; i < arrlen; i++)
	{
		sum = sum + arr[i];
	}
	mitlw = sum/arrlen;
	return mitlw;
}
int main(void) // Hauptfunktion####################################
{
	int i;
	float sum = 0;
	float min = 0;
	float max = 0;
	float med = 0;
	float mitlw = 0;
	int arrlen;    //array l채nge
	printf("Bitte geben Sie die L채nge des Arrays ein");
	scanf("%d", &arrlen);
	float arr[arrlen]; 
		for (i = 0; i < arrlen; i++)
		{
			printf("Geben Sie eine Zahl f체r das Array ein!");
			scanf("%f", &arr[i]);
		}
	sum = summe(arrlen, arr);
	printf("Die Summe ist: %f\n", sum);
	inhalt(arrlen, arr);
	min = minimum(arrlen, arr);
	printf("Das Minimum ist: %f\n", min);
	max = maximum(arrlen, arr);
	printf("Das Maximum ist: %f\n", max);
	med = median(arrlen, arr);
	printf("der Median ist: %f\n", med);
	mitlw = mittelwert(arrlen, arr);
	printf("Der Mittelwert ist: %f\n", mitlw);
		
	
	return 0;
}
